How to run SQLite
>>> python3
>>> from flaskblog import db 
>>> db.create_all() #Create DB
>>> from flaskblog import User, Post #Import tables
>>> user_1 = User(username='Bob', email='Bob@test.com', password='123') #Create User
>>> user_2 = User(username='Jack', email="Jack@test.com', password='123') #Create User
>>> db.session.add(user_1) #Add User
>>> db.session.add(user_2) #Add User
>>> db.session.commit() #Commit changes to DB
>>> User.query.all() #Query all data
[User('Bob', 'Bob@test.com','default.jpg'), User('Jack', 'Jack@test.com','default.jpg')]
>>> User.query.first() #Query first data
User('Bob', 'Bob@test.com','default.jpg')
>>> User.query.filter_by(username='Bob').all() #Filtered query
[User('Bob', 'Bob@test.com','default.jpg')] 
>>> user = User.query.first() #Save to a variable
>>> user.id #Return variable
1
>>> User.query.get(1) #Get user of id 1
User('Bob', 'Bob@test.com','default.jpg')
>>> post_1 = Post(title='Blog 1', content='First Post hello', user_id=user.id)
>>> post_2 = Post(title='Blog 2', content='Second Post hello', user_id=user.id)
>>> db.session.add(post_1)
>>> db.session.add(post_2)
>>> db.session.commit()
>>> for post in user.posts: #loop and print posts
...     print(post.title)
... 
Blog 1
Blog 2
>>> post = Post.query.first()
>>> post
Post('Blog 1', '2022-07-24 08:33:00.669205')
>>> post.user_id
1
>>> post.author
User('Bob', 'Bob@test.com','default.jpg')
>>> db.drop_all() #Clear all tables in DB
>>> db.create_all()

Ubuntu - to give user access to static folder
  sudo usermod -a -G woontl www-data

  sudo chown -R :www-data flaskblog/static

Run Pytest
python3 -m pytest -v

run this first to initialize DB

from flaskblog import create_app
app = create_app()
app.app_context().push()
from flaskblog import db
db.drop_all()
db.create_all()
exit()

How to deploy to a Linux Server.
Setup
1) Create server on linode
2) Copy ssh root@172.104.169.106 from linode and run on local terminal
3) Enter Yes and root password
4) Upgrade to latest version - apt update && apt upgrade
5) Change host name - hostnamectl set-hostname flask-server
6) nano /etc/hosts, then key in 172.104.169.106 flask-server
7) Add a limited user - adduser woontl
8) Add user to sudo group - adduser woontl sudo
9) Logout - exit
10) Log back in as user - ssh woontl@172.104.169.106

Setup SSH 
1) Setup SSH keybased authentication
  > make ssh directory - mkdir .ssh
2) Open SSH on local
  > ssh-keygen -b 4096
  > enter default file and overwrite
3) Copy SSH over to server - scp ~/.ssh/id_rsa.pub woontl@172.104.169.106:~/.ssh/authorized_keys
4) Give permission to use SSH in server
  > sudo chmod 700 ~/.ssh/
  > sudo chmod 600 ~/.ssh/*
5) sudo nano /etc/ssh/sshd_config
  > change permitrootlogin to no
  > uncomment passwordauthentication and set as no
6) sudo systemctl restart ssh

Setup firewall
1) sudo apt install ufw
2) sudo ufw default allow outgoing
3) sudo ufw default deny incoming
4) sudo ufw allow ssh
5) sudo ufw allow 5000
6) sudo ufw enable

Transfer Project over to server
1) On local - pip freeze > requirements.txt
2) scp -r /Users/tianli.woon/Documents/TL/Coding101/Project/Tuition_Site_2 woontl@172.104.169.106:~/
3) In server - sudo apt install python3-pip
4) sudo apt install python3.10-venv
5) python3 -m venv Tuition_Site_2/venv
6) cd Tuition_Site_2
7) source venv/bin/activate
8) pip install -r requirements.txt
9) sudo touch /etc/config.json
10) sudo nano /etc/config.json
  >Enter environ variables, secret key, sql DB URI, emaiil user, email password
  {
        "SECRET_KEY": "Flamer@96",
        "SQLALCHEMY_DATABASE_URI": "sqlite:///site.db",
        "EMAIL_USER": "woontl96@gmail.com",
        "EMAIL_PASS": "yvkqjvxbvpjwpxqe"
}
11) sudo nano flaskblog/config.py
  > import json
  > with open('/etc/config.json') as config_file:
        config = json.load(config_file)
  > change os.environ.get to config.get
12) export FLASK_APP=run.py
13) flask run --host=0.0.0.0

NGINX
1) in venv - cd then sudo apt install nginx
2) pip install gunicorn
3) sudo rm /etc/nginx/sites-enabled/default
4) sudo nano /etc/nginx/sites-enabled/flaskblog
  server { 
        listen 80;
        server_name 172.104.169.106;

        location /static {
                alias /home/woontl/Tuition_Site_2/flaskblog/static;
        }

        location / {
                proxy_pass http://localhost:8000;
                include /etc/nginx/proxy_params;
                proxy_redirect off;
        }

        location /socket.io {
                include /etc/nginx/proxy_params;
                proxy_http_version 1.1;
                proxy_buffering off;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
                proxy_pass http://127.0.0.1:8000/socket.io;
    }
  }
5) sudo ufw allow http/tcp
6) sudo ufw delete allow 5000
7) sudo ufw enable
8) sudo systemctl restart nginx
9) gunicorn -k geventwebsocket.gunicorn.workers.GeventWebSocketWorker -w 1 module:app
10) sudo apt install supervisor
11) sudo nano /etc/supervisor/conf.d/flaskblog.conf
  >[program:flaskblog]
    directory=/home/woontl/Tuition_Site_2
    command=/home/woontl/Tuition_Site_2/venv/bin/gunicorn -k geventwebsocket.gunicorn.workers.GeventWebSocketWorker -w 1 module:app
    user=woontl
    autostart=true
    autorestart=true
    stopasgroup=true
    killasgroup=true
    stderr_logfile=/var/log/flaskblog/flaskblog.err.log
    stdout_logfile=/var/log/flaskblog/flaskblog.out.log
12) sudo mkdir -p /var/log/flaskblog
13) sudo touch /var/log/flaskblog/flaskblog.err.log
14) sudo touch /var/log/flaskblog/flaskblog.out.log
15) sudo supervisorctl reload
16) sudo nano /etc/nginx/nginx.conf
  client_max_body_size 5M;
17) sudo systemctl restart nginx


How to link venv with github
1) cd Tuition_Site_2
2) git remote -v check if origin points to github account
3) if not, git remote remove myOrigingit 
4) git remote add origin https://github.com/woontl/Tuition_Site_2.git
5) git clone https://github.com/woontl/Tuition_Site_2.git

Git
1) git config --list, check name and email
  > git config --global user.name "Tian Li"
  > git config --global user.email "woontl96@gmail.com"
2) initialize with git init, check if theres a .git with ls -la
3) to stop git tracking, remove with rm -rf .git 
4) to ignore files, touch .gitignore
5) to add all files to staging area, git add -A
6) git reset to remove all files from staging area
7) to commit, git commit -m "gitignore"
8) git log, to see log
9) git pull origin master 
10) git push origin master
11) create branch, git branch abc
12) switch branch, git checkout abc
13) git commit -m "", git push -u origin abc
14) to merge branch with master
  > git checkout master
  > git pull origin master
  > git branch --merged
  > git merge abc
  > git push origin master
15) to delete branch
  > git branch -d abc
  > git branch -a
  > git push origin --delete abc
16) git fetch origin
reset all local changes
git reset --hard origin/master

Domain
1) Register a domain name at namecheap
2) Configure name servers in namecheap, using custom DNS
ns1.linode.com
ns2.linode.com
ns3.linode.com
ns4.linode.com
ns5.linode.com
3) Create new domain in linode, include domain (mathinthesky.com)
4) Add A record
hostname:www
IP: 172.104.169.106
5) In the linode, add reverse DNS: www.mathinthesky.com
6) sudo nano /etc/nginx/sites-enabled/flaskblog
>change server name to www.mathinthesky.com mathinthesky.com

Enable HTTPS with SSL
1) sudo apt install python3-certbot-nginx
2) sudo certbot --nginx -d mathinthesky.com -d www.mathinthesky.com
3) sudo ufw allow https
4) sudo crontab -e
1 30 4 1 * * sudo certbot renew --quiet (4.30am every 1st day of month)
9) sudo systemctl restart nginx

How to delete directory and all files
1) rm -rf Tuition_Site_2

To update production with changed config files
1) go to venv, git pull
2) sudo reboot
3) sudo supervisorctl stop all
3) venv, sudo systemctl restart nginx

How to download file from remote to local? (PROD)
1) scp woontl@172.104.169.106:Tuition_Site_2/flaskblog/site.db /Users/tianli.woon/Documents

How to download folder from remote to local? (PROD)
1) scp -r woontl@172.104.169.106:Tuition_Site_2/flaskblog/static /Users/tianli.woon/Documents

How to upload file from local to remote? (DEV)
1) scp site.db woontl@139.162.19.71:Tuition_Site_2/flaskblog/

How to upload folder from local to remote? (DEV)
1) scp -r static/ woontl@139.162.19.71:Tuition_Site_2/flaskblog

How to upload file from local to remote? (PROD)
1) scp site.db woontl@172.104.169.106:Tuition_Site_2/flaskblog/

How to upload folder from local to remote? (PROD)
1) scp -r static/ woontl@172.104.169.106:Tuition_Site_2/flaskblog

dev ssh woontl@139.162.19.71
prod ssh woontl@172.104.169.106
sudo password: Fieryflamer@96